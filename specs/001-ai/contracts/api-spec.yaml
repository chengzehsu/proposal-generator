openapi: 3.0.3
info:
  title: 智能標書產生器系統 API
  description: 提供公司資料管理、範本管理、AI內容生成和標書編輯匯出功能的RESTful API
  version: 1.0.0
  contact:
    name: 標書產生器團隊
    email: support@proposal-generator.com

servers:
  - url: http://localhost:3000/api/v1
    description: 開發環境
  - url: https://api.proposal-generator.com/v1
    description: 生產環境

paths:
  # 認證相關 API
  /auth/login:
    post:
      tags: [Authentication]
      summary: 用戶登入
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # 公司基本資料 API
  /companies/basic:
    get:
      tags: [Company]
      summary: 取得公司基本資料
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功取得公司基本資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Company]
      summary: 更新公司基本資料
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          $ref: '#/components/responses/BadRequest'

  # 團隊成員 API
  /team-members:
    get:
      tags: [Team]
      summary: 取得團隊成員列表
      security:
        - bearerAuth: []
      parameters:
        - name: is_key_member
          in: query
          schema:
            type: boolean
          description: 篩選關鍵人員
      responses:
        '200':
          description: 成功取得團隊成員列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'

    post:
      tags: [Team]
      summary: 新增團隊成員
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberCreate'
      responses:
        '201':
          description: 成功新增團隊成員
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'

  /team-members/{id}:
    put:
      tags: [Team]
      summary: 更新團隊成員
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberUpdate'
      responses:
        '200':
          description: 更新成功
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags: [Team]
      summary: 刪除團隊成員
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 刪除成功
        '404':
          $ref: '#/components/responses/NotFound'

  # 實績案例 API
  /projects:
    get:
      tags: [Projects]
      summary: 取得實績案例列表
      security:
        - bearerAuth: []
      parameters:
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: string
          description: 標籤篩選
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: 開始日期篩選
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: 結束日期篩選
      responses:
        '200':
          description: 成功取得實績案例列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Projects]
      summary: 新增實績案例
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '201':
          description: 成功新增實績案例
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  # 標書範本 API
  /templates:
    get:
      tags: [Templates]
      summary: 取得標書範本列表
      security:
        - bearerAuth: []
      parameters:
        - name: template_type
          in: query
          schema:
            $ref: '#/components/schemas/TemplateType'
      responses:
        '200':
          description: 成功取得範本列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProposalTemplate'

    post:
      tags: [Templates]
      summary: 建立自訂範本
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreate'
      responses:
        '201':
          description: 成功建立範本
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalTemplate'

  /templates/{id}/sections:
    get:
      tags: [Templates]
      summary: 取得範本章節結構
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功取得章節結構
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateSection'

  # AI內容生成 API
  /ai/generate:
    post:
      tags: [AI]
      summary: AI內容生成
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [template_id, section_id]
              properties:
                template_id:
                  type: string
                section_id:
                  type: string
                custom_prompt:
                  type: string
                  description: 自訂生成提示
      responses:
        '200':
          description: 成功生成內容
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  word_count:
                    type: integer
                  confidence_score:
                    type: number
                    format: float
                  source_data:
                    type: array
                    items:
                      type: string

  # 標書管理 API
  /proposals:
    get:
      tags: [Proposals]
      summary: 取得標書列表
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ProposalStatus'
      responses:
        '200':
          description: 成功取得標書列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'

    post:
      tags: [Proposals]
      summary: 建立新標書
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalCreate'
      responses:
        '201':
          description: 成功建立標書
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'

  /proposals/generate:
    post:
      tags: [Proposals]
      summary: AI生成標書初稿
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [template_id, proposal_name]
              properties:
                template_id:
                  type: string
                proposal_name:
                  type: string
                custom_instructions:
                  type: string
      responses:
        '201':
          description: 成功生成標書初稿
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'

  /proposals/{id}/export:
    post:
      tags: [Proposals]
      summary: 匯出標書文件
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [format]
              properties:
                format:
                  type: string
                  enum: [pdf, docx, odt]
                options:
                  type: object
                  properties:
                    include_toc:
                      type: boolean
                    include_page_numbers:
                      type: boolean
                    watermark:
                      type: string
      responses:
        '200':
          description: 匯出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                  filename:
                    type: string
                  expires_at:
                    type: string
                    format: date-time

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        company_id:
          type: string

    UserRole:
      type: string
      enum: [super_admin, admin, editor, viewer]

    Company:
      type: object
      properties:
        id:
          type: string
        company_name:
          type: string
        tax_id:
          type: string
        capital:
          type: number
        established_date:
          type: string
          format: date
        address:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        website:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CompanyUpdate:
      type: object
      properties:
        company_name:
          type: string
          minLength: 2
          maxLength: 255
        tax_id:
          type: string
          pattern: '^[0-9]{8}$'
        capital:
          type: number
          minimum: 0
        address:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        website:
          type: string
          format: uri

    TeamMember:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        title:
          type: string
        department:
          type: string
        education:
          type: string
        experience:
          type: string
        expertise:
          type: string
        photo_url:
          type: string
          format: uri
        is_key_member:
          type: boolean
        display_order:
          type: integer

    TeamMemberCreate:
      type: object
      required: [name, title]
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 50
        title:
          type: string
        department:
          type: string
        education:
          type: string
        experience:
          type: string
        expertise:
          type: string
        is_key_member:
          type: boolean
          default: false

    TeamMemberUpdate:
      allOf:
        - $ref: '#/components/schemas/TeamMemberCreate'
        - type: object
          properties:
            display_order:
              type: integer
              minimum: 0

    Project:
      type: object
      properties:
        id:
          type: string
        project_name:
          type: string
        client_name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        amount:
          type: number
        scale:
          type: string
        description:
          type: string
        achievements:
          type: string
        tags:
          type: array
          items:
            type: string
        is_public:
          type: boolean

    ProjectCreate:
      type: object
      required: [project_name, description]
      properties:
        project_name:
          type: string
          minLength: 2
          maxLength: 255
        client_name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        amount:
          type: number
          minimum: 0
        scale:
          type: string
        description:
          type: string
        achievements:
          type: string
        tags:
          type: array
          items:
            type: string
        is_public:
          type: boolean
          default: true

    ProposalTemplate:
      type: object
      properties:
        id:
          type: string
        template_name:
          type: string
        template_type:
          $ref: '#/components/schemas/TemplateType'
        description:
          type: string
        is_system_template:
          type: boolean
        created_at:
          type: string
          format: date-time

    TemplateType:
      type: string
      enum: [government_grant, enterprise_bid, award_application, custom]

    TemplateSection:
      type: object
      properties:
        id:
          type: string
        section_name:
          type: string
        section_order:
          type: integer
        is_required:
          type: boolean
        min_words:
          type: integer
        max_words:
          type: integer
        content_hint:
          type: string
        data_types:
          type: array
          items:
            type: string

    Proposal:
      type: object
      properties:
        id:
          type: string
        proposal_name:
          type: string
        template_id:
          type: string
        status:
          $ref: '#/components/schemas/ProposalStatus'
        word_count:
          type: integer
        generated_with_ai:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ProposalStatus:
      type: string
      enum: [draft, in_review, completed, submitted]

    ProposalCreate:
      type: object
      required: [proposal_name, template_id]
      properties:
        proposal_name:
          type: string
          minLength: 2
          maxLength: 255
        template_id:
          type: string

    TemplateCreate:
      type: object
      required: [template_name, template_type]
      properties:
        template_name:
          type: string
          minLength: 2
          maxLength: 255
        template_type:
          $ref: '#/components/schemas/TemplateType'
        description:
          type: string

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          minimum: 1
        per_page:
          type: integer
          minimum: 1
        total_pages:
          type: integer
        total_count:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              code:
                type: string
              message:
                type: string

  responses:
    BadRequest:
      description: 請求參數錯誤
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: 未授權存取
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: 資源不存在
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: 伺服器內部錯誤
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
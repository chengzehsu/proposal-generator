version: '3.8'

services:
  database:
    image: postgres:14-alpine
    container_name: proposal-generator-db
    environment:
      POSTGRES_DB: proposal_generator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proposal-generator-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: "postgresql://postgres:password123@database:5432/proposal_generator"
      JWT_SECRET: "development-jwt-secret-key-256-bits-long"
      GEMINI_API_KEY: "your-gemini-api-key"
      FRONTEND_URL: "http://localhost:3000"
      LOG_LEVEL: "info"
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./backend/logs:/app/backend/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: nginx:alpine
    container_name: proposal-generator-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local